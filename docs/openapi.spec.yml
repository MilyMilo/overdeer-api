openapi: 3.0.0
info:
  title: Overdeer
  description: "# Introduction\nOverdeer API provides back-end for the school organizer service.\n\n# Authentication\nUsers should be registered at /api/register and then and then a token should be obtained at /api/login and used as Bearer token with every request. \n\n# Error Codes\nGeneric errors are returned as an object with key `error` which contains the message.\nSuch as `{ \"error\": \"Group not found\" }` returned with a 404 status.\n\nErrors `400` and `422` provide more specific responses, returning keys of the invalid fields with their error messages.\n\nSuch as `{ \"email\": \"Email has to be of type string\" }` with a 400 status, or `{ \"username\": \"\"Username must be between 2 and 30 characters\" }` with 422 status."
  contact: {}
  version: "1.0"
servers:
  - url: http://localhost:8080/api
    variables: {}
paths:
  /current:
    get:
      tags:
        - Auth
      summary: Current
      description: Basic JWT Authentication
      operationId: Current
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      responses:
        200:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 75
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 11:13:55 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/CurrentUser"
              example:
                id: 5c3d01c7ffd10a69f1cc7874
                username: example
                email: example@example.com
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /register:
    post:
      tags:
        - Auth
      summary: Register
      description: "TODO: Add Description"
      operationId: Register
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
            example: '{"username":"test","email":"test@test.com","password":"securepasswd"}'
        required: true
      responses:
        201:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 52
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 11:15:03 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Register-OK"
              example:
                username: example
                email: example@example.com
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /login:
    post:
      tags:
        - Auth
      summary: Login
      description: "TODO: Add Description"
      operationId: Login
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
            example: '{"email":"test@test.com","password":"securepasswd"}'
        required: true
      responses:
        200:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 218
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 11:15:31 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/Login-OK"
              example:
                token: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVjM2RjMGI3Njg4M2JiNDM1MTk5ZGQ4YiIsInVzZXJuYW1lIjoiZXhhbXBsZSIsImlhdCI6MTU0NzU1MDkzMSwiZXhwIjoxNTQ3NTU0NTMxfQ.Rh9BjxFsKLxrjjRrqFnzeuzdmIs7-UEHUYw0m_u54Vk
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login-Invalid"
              example:
                login: Invalid user or/and password
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /groups/test:
    post:
      tags:
        - Events
      summary: Create Event
      description: "TODO: Add Description"
      operationId: CreateEvent
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEventRequest"
            example: '{"name":"testevent","description":"very important","type":"test","subject":"math","date":1547497706524}'
        required: true
      responses:
        201:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 123
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 10:04:27 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/CreateEvent-Created"
              example:
                id: 1
                name: example
                description: very important
                type: test
                subject: math
                date: 2019-01-14T20:28:26.5240000Z
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Group not found
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    get:
      tags:
        - Groups
      summary: Get Group
      description: "TODO: Add Description"
      operationId: GetGroup
      parameters: []
      responses:
        200:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 311
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 10:44:21 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/GetGroup-OK"
              example:
                isPrivate: false
                members:
                  - avatar: ""
                    _id: 5c3d01c7ffd10a69f1cc7874
                    username: example
                _id: 5c3db913b325f140b4b24865
                name: example
                slug: example
                description: example
                owner:
                  avatar: ""
                  _id: 5c3d01c7ffd10a69f1cc7874
                  username: example
                createdAt: 2019-01-15T10:42:27.7730000Z
                events: []
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Group not found
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      tags:
        - Groups
      summary: Update Group
      description: "TODO: Add Description"
      operationId: UpdateGroup
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGroupRequest"
            example: '{"name":"test"}'
        required: true
      responses:
        200:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 76
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 10:48:38 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/UpdateGroup-OK"
              example:
                name: newName
                slug: newName
                description: example
                isPrivate: true
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Insufficient permissions to update this group
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Group not found
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: This name is already taken
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      tags:
        - Groups
      summary: Delete Group
      description: "TODO: Add Description"
      operationId: DeleteGroup
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      responses:
        204:
          description: ""
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 11:12:05 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            text/plain:
              schema:
                type: object
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Insufficient permissions to delete this group
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Group not found
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /groups/test/:
    get:
      tags:
        - Events
      summary: Get Event
      description: "TODO: Add Description"
      operationId: GetEvent
      parameters: []
      responses:
        200:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 270
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 10:29:46 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/GetEvent-OK"
              example:
                _id: 5c3db02ba89f5a3202ecf4e2
                name: example
                description: very important
                type: test
                subject: math
                date: 2019-01-14T20:28:26.5240000Z
                creator:
                  avatar: ""
                  _id: 5c3d01c7ffd10a69f1cc7874
                  username: example
                createdAt: 2019-01-15T10:04:27.8260000Z
                id: 3
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Event not found
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /groups/test/1:
    put:
      tags:
        - Events
      summary: Update Event
      description: "TODO: Add Description"
      operationId: UpdateEvent
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEventRequest"
            example: '{"name":"newName"}'
        required: true
      responses:
        200:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 160
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 10:36:58 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/UpdateEvent-OK"
              example:
                _id: 5c3db7bd02bc193ce407d59d
                id: 11
                name: Better name!
                description: very important
                type: test
                subject: math
                date: 2019-01-14T20:28:26.5240000Z
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Insufficient permissions to update this event
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Event not found
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      tags:
        - Events
      summary: Delete Event
      description: "TODO: Add Description"
      operationId: DeleteEvent
      parameters: []
      responses:
        204:
          description: ""
          headers:
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 10:40:14 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            text/plain:
              schema:
                type: object
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: Event not found
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /groups:
    post:
      tags:
        - Groups
      summary: Create Group
      description: "TODO: Add Description"
      operationId: CreateGroup
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGroupRequest"
            example: '{"name":"test","description":"test","isPrivate":false}'
        required: true
      responses:
        201:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 110
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 10:42:27 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/CreateGroup-OK"
              example:
                _id: 5c3db913b325f140b4b24865
                name: example
                slug: example
                description: example
                isPrivate: false
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroup-Forbidden"
              example:
                error: This name is already taken
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    get:
      tags:
        - Groups
      summary: List Groups
      description: "TODO: Add Description"
      operationId: ListGroups
      parameters:
        - name: page
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
        - name: count
          in: query
          description: ""
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 10
      responses:
        200:
          description: ""
          headers:
            Content-Length:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 539
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 15 Jan 2019 10:51:05 GMT
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ListGroups-UnauthenticatedOK"
              example:
                groups:
                  - isPrivate: false
                    _id: 5c3d0fca2b0fd1115bf13b56
                    name: example1
                    slug: example1
                    description: example
                    owner:
                      avatar: ""
                      _id: 5c3d01c7ffd10a69f1cc7874
                      username: example
                    createdAt: 2019-01-14T22:40:10.9720000Z
                  - isPrivate: false
                    _id: 5c3d9d161c13d8132b4c6a3e
                    name: example2
                    slug: example2
                    description: example
                    owner:
                      avatar: ""
                      _id: 5c3d01c7ffd10a69f1cc7874
                      username: example
                    createdAt: 2019-01-15T08:43:02.2390000Z
                pagination:
                  next: /api/groups?page=1&count=10
                  previous: /api/groups?page=1&count=10
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
components:
  schemas:
    CurrentUser:
      title: CurrentUser
      required:
        - id
        - username
        - email
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
      example:
        id: 5c3d01c7ffd10a69f1cc7874
        username: example
        email: example@example.com
    RegisterRequest:
      title: RegisterRequest
      required:
        - username
        - email
        - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        username: test
        email: test@test.com
        password: securepasswd
    Register-OK:
      title: Register-OK
      required:
        - username
        - email
      type: object
      properties:
        username:
          type: string
        email:
          type: string
      example:
        username: example
        email: example@example.com
    LoginRequest:
      title: LoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: test@test.com
        password: securepasswd
    Login-OK:
      title: Login-OK
      required:
        - token
      type: object
      properties:
        token:
          type: string
      example:
        token: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVjM2RjMGI3Njg4M2JiNDM1MTk5ZGQ4YiIsInVzZXJuYW1lIjoiZXhhbXBsZSIsImlhdCI6MTU0NzU1MDkzMSwiZXhwIjoxNTQ3NTU0NTMxfQ.Rh9BjxFsKLxrjjRrqFnzeuzdmIs7-UEHUYw0m_u54Vk
    Login-Invalid:
      title: Login-Invalid
      required:
        - login
      type: object
      properties:
        login:
          type: string
      example:
        login: Invalid user or/and password
    CreateEventRequest:
      title: CreateEventRequest
      required:
        - name
        - description
        - type
        - subject
        - date
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        subject:
          type: string
        date:
          type: integer
          format: int64
      example:
        name: testevent
        description: very important
        type: test
        subject: math
        date: 1547497706524
    CreateEvent-Created:
      title: CreateEvent-Created
      required:
        - id
        - name
        - description
        - type
        - subject
        - date
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        type:
          type: string
        subject:
          type: string
        date:
          type: string
      example:
        id: 1
        name: example
        description: very important
        type: test
        subject: math
        date: 2019-01-14T20:28:26.5240000Z
    GetEvent-OK:
      title: GetEvent-OK
      required:
        - _id
        - name
        - description
        - type
        - subject
        - date
        - creator
        - createdAt
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        subject:
          type: string
        date:
          type: string
        creator:
          $ref: "#/components/schemas/Creator"
        createdAt:
          type: string
      example:
        _id: 5c3db02ba89f5a3202ecf4e2
        name: example
        description: very important
        type: test
        subject: math
        date: 2019-01-14T20:28:26.5240000Z
        creator:
          avatar: ""
          _id: 5c3d01c7ffd10a69f1cc7874
          username: example
        createdAt: 2019-01-15T10:04:27.8260000Z
        id: 3
    Creator:
      title: Creator
      required:
        - avatar
        - _id
        - username
      type: object
      properties:
        avatar:
          type: string
        _id:
          type: string
        username:
          type: string
    UpdateEventRequest:
      title: UpdateEventRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
      example:
        name: newName
    UpdateEvent-OK:
      title: UpdateEvent-OK
      required:
        - _id
        - name
        - description
        - type
        - subject
        - date
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        subject:
          type: string
        date:
          type: string
      example:
        _id: 5c3db7bd02bc193ce407d59d
        id: 11
        name: Better name!
        description: very important
        type: test
        subject: math
        date: 2019-01-14T20:28:26.5240000Z
    CreateGroupRequest:
      title: CreateGroupRequest
      required:
        - name
        - description
        - isPrivate
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        isPrivate:
          type: boolean
      example:
        name: test
        description: test
        isPrivate: false
    CreateGroup-OK:
      title: CreateGroup-OK
      required:
        - _id
        - name
        - slug
        - description
        - isPrivate
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        isPrivate:
          type: boolean
      example:
        _id: 5c3db913b325f140b4b24865
        name: example
        slug: example
        description: example
        isPrivate: false
    GetGroup-OK:
      title: GetGroup-OK
      required:
        - isPrivate
        - members
        - _id
        - name
        - slug
        - description
        - owner
        - createdAt
        - events
      type: object
      properties:
        isPrivate:
          type: boolean
        members:
          type: array
          items:
            $ref: "#/components/schemas/Member"
          description: ""
        _id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        owner:
          $ref: "#/components/schemas/Owner"
        createdAt:
          type: string
        events:
          type: array
          items:
            type: string
          description: ""
      example:
        isPrivate: false
        members:
          - avatar: ""
            _id: 5c3d01c7ffd10a69f1cc7874
            username: example
        _id: 5c3db913b325f140b4b24865
        name: example
        slug: example
        description: example
        owner:
          avatar: ""
          _id: 5c3d01c7ffd10a69f1cc7874
          username: example
        createdAt: 2019-01-15T10:42:27.7730000Z
        events: []
    Member:
      title: Member
      required:
        - avatar
        - _id
        - username
      type: object
      properties:
        avatar:
          type: string
        _id:
          type: string
          example: 5c3d01c7ffd10a69f1cc7874
        username:
          type: string
          example: example
    Owner:
      title: Owner
      required:
        - avatar
        - _id
        - username
      type: object
      properties:
        avatar:
          type: string
        _id:
          type: string
        username:
          type: string
      example:
        avatar: ""
        _id: 5c3d01c7ffd10a69f1cc7874
        username: example
    ListGroups-UnauthenticatedOK:
      title: ListGroups-UnauthenticatedOK
      required:
        - groups
        - pagination
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: "#/components/schemas/Group"
          description: ""
        pagination:
          $ref: "#/components/schemas/Pagination"
      example:
        groups:
          - isPrivate: false
            _id: 5c3d0fca2b0fd1115bf13b56
            name: example1
            slug: example1
            description: example
            owner:
              avatar: ""
              _id: 5c3d01c7ffd10a69f1cc7874
              username: example
            createdAt: 2019-01-14T22:40:10.9720000Z
          - isPrivate: false
            _id: 5c3d9d161c13d8132b4c6a3e
            name: example2
            slug: example2
            description: example
            owner:
              avatar: ""
              _id: 5c3d01c7ffd10a69f1cc7874
              username: example
            createdAt: 2019-01-15T08:43:02.2390000Z
        pagination:
          next: /api/groups?page=1&count=10
          previous: /api/groups?page=1&count=10
    Group:
      title: Group
      required:
        - isPrivate
        - _id
        - name
        - slug
        - description
        - owner
        - createdAt
      type: object
      properties:
        isPrivate:
          type: boolean
          example: false
        _id:
          type: string
          example: 5c3d0fca2b0fd1115bf13b56
        name:
          type: string
          example: example1
        slug:
          type: string
          example: example1
        description:
          type: string
          example: example
        owner:
          $ref: "#/components/schemas/Owner"
        createdAt:
          type: string
          example: 1/14/2019 10:40:10 PM
    Pagination:
      title: Pagination
      required:
        - next
        - previous
      type: object
      properties:
        next:
          type: string
        previous:
          type: string
    UpdateGroupRequest:
      title: UpdateGroupRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
      example:
        name: test
    UpdateGroup-OK:
      title: UpdateGroup-OK
      required:
        - name
        - slug
        - description
        - isPrivate
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        isPrivate:
          type: boolean
      example:
        name: newName
        slug: newName
        description: example
        isPrivate: true
    DeleteGroup-Forbidden:
      title: DeleteGroup-Forbidden
      required:
        - error
      type: object
      properties:
        error:
          type: string
      example:
        error: Insufficient permissions to delete this group
tags:
  - name: Auth
    description: General auth generating routes. They allow users to register and obtain JWT tokens.
  - name: Events
    description: ""
  - name: Groups
    description: "Groups are an essential component to Overdeer's functionality. They aggregate users and events with then comments and tags. They handle notifications as well as allow for per-group payments. "
